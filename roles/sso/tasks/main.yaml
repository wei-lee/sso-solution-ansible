---
- name: "Get Project Details: {{ sso_operator_namespace }}"
  shell: "oc get project {{ sso_operator_namespace }}"
  register: namespace_details
  ignore_errors: yes

- name: "Create Project {{ sso_operator_namespace }}"
  shell: "oc new-project {{ sso_operator_namespace }}"
  when: namespace_details.rc != 0

- name: Set output directory fact
  set_fact:
    output_dir: "/tmp/.sso/{{ sso_operator_namespace }}/output"

- name: Ensure output directory exists
  file:
    path: "{{ output_dir }}"
    state: directory
    mode: 0700

- name: Create database using Crunchydata postgres-operator
  include_tasks: "./crunchydata-db.yaml"
  when: (crunchydata_database is defined) and (crunchydata_database|bool == True) 

- name: Create database using Zalando postgres-operator
  include_tasks: "./zalando-db.yaml"
  when: (zalando_database is defined) and (zalando_database|bool == True)

- name: Create SSO external database secret
  include_tasks: "./apply-resource.yaml"
  loop:
    - external-database-secret.yaml
  vars:
    tmp_dir: "{{ output_dir }}"
    resource_namespace: "{{ sso_operator_namespace }}"

- name: Create sso instance
  include_tasks: "./apply-resource.yaml"
  loop:
    - sso-operator-group.yaml
    - sso-subscription.yaml
  vars:
    tmp_dir: "{{ output_dir }}"
    resource_namespace: "{{ sso_operator_namespace }}"
  
- name: Create keycloak CR
  include_tasks: "./apply-resource.yaml"
  loop:
    - sso-cr.yaml
  vars:
    tmp_dir: "{{ output_dir }}"
    resource_namespace: "{{ sso_operator_namespace }}"